if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

kapt {
//    generateStubs = true
    arguments {
        // 路由框架译配置
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    namespace 'com.winwang.main'
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        if (isModule.toBoolean()) {
            applicationId "com.winwang.mainmodule"
        }
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
        buildConfig = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':commonAppLib')
    kapt rootProject.ext.dependencies["arouter-compiler"]
//    kapt rootProject.ext.dependencies["applifecycle-compiler"]
}